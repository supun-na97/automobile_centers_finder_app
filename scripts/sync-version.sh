#!/usr/bin/env bash

SCRIPT_NAME=$(basename -- "$0")
PROJECT_ROOT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && cd .. && pwd )"

# Print usage
# Based on
# https://natelandau.com/boilerplate-shell-script-template/
function usage()
{
    echo -n "Usage: ${SCRIPT_NAME} VERSION
Write version string into source code.
"
}

function write_version_files()
{
    local version
    version="$(tr -d '[:space:]' <<<"${1}")" # Remove spaces

    #################### core app version ####################
    cat >"${PROJECT_ROOT_DIR}/core/app/Support/version.php" << EOL
<?php

/**
 * This file generated by 'sync-version.sh' script
 *
 * WARNING! DO NOT EDIT. All changes made in this file will be lost when running sync-version.sh
 */

if (! function_exists('app_version_string')) {
    function app_version_string()
    {
        return '${version}';
    }
}
EOL

    ################## frontend app version ##################
    cat >"${PROJECT_ROOT_DIR}/frontend/src/version.js" << EOL
/**
 * This file generated by 'sync-version.sh' script
 *
 * WARNING! DO NOT EDIT. All changes made in this file will be lost when running sync-version.sh
 */

export const VER_INFO = {
  'version': '${version}'
};

export function appVersion() {
  return VER_INFO.version;
}
EOL
}

function main()
{
    if [[ -z "$1" ]]; then
        echo "Required argument 'version' missing" >&2
        usage
        exit 1
    fi

    write_version_files "$1"
}

main "$@";
